<<<<<<< .working
=======
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.libreoffice.zoho.authentication;

/**
 *
 * @author amila
 */
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import org.libreoffice.zoho.config.Configuration;

public class FileWallet {

    private static final String SECRET = "test";
    private String username;
    private String password;
    String credentionalsFileName = Configuration.getInstance().getWorkingPath() + "/credentials.dat";


    public String getPassword() {
        readCreditionals();
        return password;
    }

    public String getUsername() {
        readCreditionals();
        return username;
    }


    

    private  boolean readCreditionals() {

        boolean result = false;
        try {
            File file = new File(credentionalsFileName);
            if (file.exists()) {
                FileReader fr = new FileReader(credentionalsFileName);
                BufferedReader br = new BufferedReader(fr);
                char[] buf = new char[1024];
                int length = br.read(buf);

                br.close();
                String decoded = xorString(new String(buf, 0, length), SECRET);
                String[] lines = decoded.split("\n");
                username = lines[0];
                password = lines[1];
                result = true;
            }
        } catch (IOException e) {
        }
        return result;
    }

    public   void storeCreditionals(String username, String password) {

        try {
            FileWriter fw = new FileWriter(credentionalsFileName);
            BufferedWriter bw = new BufferedWriter(fw);
            String str = username + "\n" + password;
            bw.write(xorString(str, SECRET));
            bw.close();
        } catch (IOException e) {
        }
    }

    private String xorString(String phrase, String secret) {
        char[] keyChars = secret.toCharArray();
        char[] inputChars = phrase.toCharArray();
        for (int i = 0; i < inputChars.length; i++) {
            inputChars[i] ^= keyChars[i % keyChars.length];
        }
        return new String(inputChars);
    }
}
>>>>>>> .merge-right.r19
