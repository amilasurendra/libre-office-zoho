
package org.libreoffice.zoho.ui;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.libreoffice.zoho.authentication.CredentialManager;
import org.libreoffice.zoho.config.Configuration;
import org.libreoffice.zoho.config.Logger;

/**
 * @author Amila Surendra
 */
public class LoginPanel extends javax.swing.JFrame {

    /** Creates new form LoginPanel */
    public LoginPanel() {

        try {
            UIManager.setLookAndFeel(Configuration.getInstance().getLookAndFeel());
        } catch (Exception e) {
            Logger.log("Error setting look and feel :" + e.getMessage());
        }
        
        initComponents();
        fillFields();
        this.setIconImage(new ImageIcon(getClass().getResource("/org/libreoffice/zoho/Resources/zoho_icon.png")).getImage());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        nameCheckBox = new javax.swing.JCheckBox();
        passCheckBox = new javax.swing.JCheckBox();
        loginButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login to Zoho Account");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        usernameField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        nameCheckBox.setFont(new java.awt.Font("Dialog", 0, 11));
        nameCheckBox.setText("Remember username ?");
        nameCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameCheckBoxItemStateChanged(evt);
            }
        });

        passCheckBox.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        passCheckBox.setText("Remember password ?");
        passCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                passCheckBoxItemStateChanged(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(22, 22, 22)
                        .addComponent(passField, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(nameCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(passCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(loginButton)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-304)/2, (screenSize.height-160)/2, 304, 160);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        if(!isFieldsFilled()) return;

        CredentialManager.getInstance().setPassword(new String(passField.getPassword()), passCheckBox.isSelected());
        CredentialManager.getInstance().setUserName(usernameField.getText().toString(), nameCheckBox.isSelected());

        this.dispose();
    }//GEN-LAST:event_loginButtonActionPerformed

    
    private void passCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_passCheckBoxItemStateChanged
        if(passCheckBox.isSelected()){
            nameCheckBox.setSelected(true);
        }
    }//GEN-LAST:event_passCheckBoxItemStateChanged

    private void nameCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameCheckBoxItemStateChanged
        if(!nameCheckBox.isSelected()){
            passCheckBox.setSelected(false);
        }
    }//GEN-LAST:event_nameCheckBoxItemStateChanged

    //validate input
    private boolean isFieldsFilled() {
        if (usernameField.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please fill username");
            return false;
        }
        if (passField.getPassword().length == 0) {
            JOptionPane.showMessageDialog(null, "Please fill password");
            return false;
        }
        return true;
    }

    //Fill currenly saved fields
    private void fillFields() {
        CredentialManager credentials = CredentialManager.getInstance();

        if (credentials.isUsernameSaved()) {
            String userName = credentials.getUserName();
            usernameField.setText(userName);
            nameCheckBox.setSelected(true);
        }
        if (credentials.isPasswordSaved()) {
            passField.setText(credentials.getPassword());
            passCheckBox.setSelected(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new LoginPanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JCheckBox nameCheckBox;
    private javax.swing.JCheckBox passCheckBox;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
